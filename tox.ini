[tox]
minversion = 2.0
#envlist = py34-constraints,py27-constraints,pypy-constraints,pep8-constraints
envlist = py27-constraints,pep8-constraints

skipsdist = True

[base]
ARTS = {env:ARTS:test_run}
TOOLS = {toxinidir}/gitfred/fuel-web/nailgun/tools


[testenv]
usedevelop = True
install_command =
                  constraints: {[testenv:common-constraints]install_command}
                  pip install -U {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
    DB_ROOT={env:DB_ROOT:openstack_citest}
    DB_ROOTPW={env:DB_ROOTPW:openstack_citest}
    DB_ROOTPGPASS={[base]ARTS}/pgpass

    NAILGUN_CONFIG={env:NAILGUN_CONFIG}
    NAILGUN_DB={env:NAILGUN_DB:openstack_citest}
    NAILGUN_DB_HOST={env:NAILGUN_DB_HOST:127.0.0.1}
    NAILGUN_DB_PORT={env:NAILGUN_DB_PORT:5432}
    NAILGUN_DB_USER={env:NAILGUN_DB_USER:openstack_citest}
    NAILGUN_DB_USERPW={env:NAILGUN_DB_USERPW:openstack_citest}

    NAILGUN_ROOT={toxinidir}/gitfred/fuel-web/nailgun
    NAILGUN_STATIC={env:NAILGUN_STATIC:static}
    NAILGUN_TEMPLATES={env:NAILGUN_TEMPLATES:static}
    NAILGUN_FIXTURE_FILES={env:NAILGUN_FIXTURE_FILES:}

    NAILGUN_CONFIG={[base]ARTS}/test.yaml
    NAILGUN_LOGS={[base]ARTS}
    NAILGUN_PORT={env:NAILGUN_PORT:8000}
    NAILGUN_START_MAX_WAIT_TIME=20
    NAILGUN_CHECK_URL=/api/version

deps = -r{toxinidir}/test-requirements.txt

whitelist_externals =
    rm
    bash

commands =
    rm -rf ./openstack/ ./gitfred/
    zuul-cloner git://github.com gitfred/fuel-web --project-branch gitfred/fuel-web=wo-volman
    pip install -e ./gitfred/fuel-web/nailgun
    pip install -e .
    bash -c "{[base]TOOLS}/env.sh prepare_nailgun_env"
    bash -c "{[base]TOOLS}/env.sh prepare_nailgun_database"
    bash -c "{[base]TOOLS}/env.sh prepare_nailgun_server"
    ostestr -c 1{posargs}
    bash -c "{[base]TOOLS}/env.sh cleanup_nailgun_server"

[testenv:common-constraints]
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}

[testenv:pep8]
commands = flake8 {posargs}

[testenv:pep8-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:venv-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:cover-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:docs-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = python setup.py build_sphinx

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:debug-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = oslo_debug_helper {posargs}

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build
